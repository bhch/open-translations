{"version":3,"sources":["components/navs.js","components/search.js","translations/index.js","components/table.js","home.js","App.js","reportWebVitals.js","index.js"],"names":["TopNav","className","href","src","process","SearchIon","width","height","viewBox","fill","xmlns","fillRule","d","SearchBox","props","value","trim","method","onSubmit","e","preventDefault","type","placeholder","onChange","langs","en","es","de","hi","TableBox","inputLangCode","inputLang","outputLangCodes","searchVal","TableFiltered","TableAll","headers","_meta","name","i","length","outputLang","push","categGroups","term","startsWith","tags","tag","hasOwnProperty","rows","categ","toTitleCase","map","categTerms","termColFirst","getInputLangTermCol","termColRest","j","getOutputLangTermCol","toLowerCase","terms_startMatch","terms_containMatch","_term","includes","terms","concat","termData","join","colspan","CopyButton","handleClick","navigator","clipboard","writeText","text","then","showFeedback","state","hasFeedback","setState","setTimeout","hideFeedback","this","title","onClick","class","fill-rule","React","Component","variants","Object","keys","variant","description","key","str","replace","txt","charAt","toUpperCase","substr","Home","handleSearchChange","target","AboutSection","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a7760df.chunk.js","sourcesContent":["export function TopNav() {\n    return (\n        <div className=\"nav top-nav\">\n            <div className=\"container\">\n                <a href=\"#\" className=\"branding\">\n                    <img src={process.env.PUBLIC_URL + \"/logo-128.png\"} />\n                    Open Translations\n                    <span className=\"label beta\">Beta</span>\n                </a>\n\n                <ul>\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"https://github.com/bhch/open-translations\">GitHub</a></li>\n                </ul>\n            </div>\n        </div>\n    );\n}\n","function SearchIon() {\n    return (\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\n            <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\n        </svg>\n    );\n}\n\nfunction SearchBox(props) {\n    let className = \"search-box clearfix\";\n    if (props.value.trim()) {\n        className += \" minimal\";\n    }\n\n    return (\n        <div className={className}>\n            <h2 className=\"text-center\">Translations for your apps and websites</h2>\n\n            <form method=\"GET\" onSubmit={(e) => e.preventDefault()}>\n                <input \n                    type=\"text\" \n                    className=\"search-input\" \n                    placeholder=\"Search a term...\" \n                    value={props.value} \n                    onChange={props.onChange} \n\n                />\n                \n                <button type=\"submit\" className=\"search-button\">\n                    <SearchIon />\n                </button>\n            </form>\n        </div>\n    );\n}\n\n\nexport default SearchBox;","import en from './en.json';\nimport es from './es.json';\nimport de from './de.json';\nimport hi from './hi.json';\n\n\nconst langs = {\n    en: en, \n    es: es,\n    de: de,\n    hi: hi,\n};\n\nexport default langs;","import React from 'react';\nimport langs from '../translations';\n\n\nexport default function TableBox(props) {\n    const inputLangCode = 'en';\n    const inputLang = langs[inputLangCode];\n    const outputLangCodes = ['es', 'de', 'hi'];\n\n    if (props.searchVal.trim())\n        return (\n            <TableFiltered \n                {...props} \n                inputLangCode={inputLangCode} \n                inputLang={inputLang}\n                outputLangCodes={outputLangCodes}\n            />\n        );\n    else\n        return (\n            <TableAll \n                {...props} \n                inputLangCode={inputLangCode} \n                inputLang={inputLang}\n                outputLangCodes={outputLangCodes}\n            />\n        );\n}\n\n\nfunction TableAll(props) {\n    /* Renders all terms */\n\n    const inputLangCode = props.inputLangCode\n    const inputLang = props.inputLang;\n    const outputLangCodes = props.outputLangCodes;\n\n    const headers = [inputLang._meta.name];\n\n    for (let i = 0; i < outputLangCodes.length; i++) {\n        const outputLang = langs[outputLangCodes[i]];\n        if (outputLang)\n            headers.push(outputLang._meta.name);\n    }\n\n    const categGroups = {};\n\n    for (let term in inputLang) {\n        if (term.startsWith('_'))\n            continue;\n\n        let tags = inputLang[term].tags;\n\n        for (let i = 0; i < tags.length; i++) {\n            let tag = tags[i];\n\n            if (!categGroups.hasOwnProperty(tag)) {\n                categGroups[tag] = [];\n            }\n\n            categGroups[tag].push(term);\n        }\n    }\n\n    const rows = [];\n\n    for (let categ in categGroups) {\n        rows.push(\n            <tr className=\"category\" key={'categ_row_' + categ}>\n                <td>{toTitleCase(categ)}</td>\n                {outputLangCodes.map((i) => <td key={'categ_empty_col_' + i}></td>)}\n            </tr>\n        );\n\n        let categTerms = categGroups[categ];\n        for (let i = 0; i < categTerms.length; i++) {\n            let term = categTerms[i];\n\n            const termData = inputLang[term];\n\n            let termColFirst = getInputLangTermCol(term, termData);\n\n\n            let termColRest = [];\n            for (let j = 0; j < outputLangCodes.length; j++) {\n                let outputLang = langs[outputLangCodes[j]];\n\n                if (!outputLang)\n                    continue;\n\n                let value = outputLang[term].value;\n\n                termColRest.push(getOutputLangTermCol(value));\n            }\n\n            rows.push(<tr>{termColFirst}{termColRest}</tr>);\n        }\n    }\n\n    return (\n        <div className=\"table-box\">\n            <table>\n                <thead>\n                    <tr>\n                        {headers.map((i) => <th key={'header_' + i}>{i}</th>)}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\n\nfunction TableFiltered(props) {\n    /* Renders filtered terms */\n    \n    const inputLangCode = props.inputLangCode\n    const inputLang = props.inputLang;\n    const outputLangCodes = props.outputLangCodes;\n    const searchVal = props.searchVal.trim().toLowerCase();\n\n    const headers = [inputLang._meta.name];\n\n    for (let i = 0; i < outputLangCodes.length; i++) {\n        const outputLang = langs[outputLangCodes[i]];\n        if (outputLang)\n            headers.push(outputLang._meta.name);\n    }\n\n    const terms_startMatch = [];\n    const terms_containMatch = [];\n\n    for (let term in inputLang) {\n        if (term.startsWith('_'))\n            continue;\n\n        let _term = term.trim().toLowerCase();\n\n        if (_term.startsWith(searchVal))\n            terms_startMatch.push(term);\n        else if (_term.includes(searchVal))\n            terms_containMatch.push(term);\n    }\n\n    const terms = terms_startMatch.concat(terms_containMatch);\n\n    const rows = [];\n\n    for (let i = 0; i < terms.length; i++) {\n        let term = terms[i];\n        const termData = inputLang[term];\n        rows.push(\n            <tr className=\"category\">\n                <td>{toTitleCase(termData.tags.join(', '))}</td>\n                {outputLangCodes.map((i) => <td></td>)}\n            </tr>\n        );\n\n        let termColFirst = getInputLangTermCol(term, termData);\n\n        let termColRest = [];\n        for (let j = 0; j < outputLangCodes.length; j++) {\n            let outputLang = langs[outputLangCodes[j]];\n\n            if (!outputLang)\n                continue;\n\n            let value = outputLang[term].value;\n\n            termColRest.push(getOutputLangTermCol(value));\n        }\n\n        rows.push(<tr>{termColFirst}{termColRest}</tr>);\n    }\n\n    if (!rows.length)\n        rows.push(<tr className=\"empty-search\"><td colspan={outputLangCodes.length + 1}>Nothing found</td></tr>);\n\n    return (\n        <div className=\"table-box has-filters\">\n            <table>\n                <thead>\n                    <tr>\n                        {headers.map((i) => <th key={'header_' + i}>{i}</th>)}\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nclass CopyButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            hasFeedback: false\n        };\n    }\n    handleClick = (e) => {\n        navigator.clipboard.writeText(this.props.text)\n        .then(this.showFeedback);\n    }\n\n    showFeedback = () => {\n        if (this.state.hasFeedback)\n            return;\n\n        this.setState({hasFeedback: true}, () => setTimeout(this.hideFeedback, 500));\n    }\n\n    hideFeedback = () => {\n        this.setState({hasFeedback: false});\n    }\n\n    render() {\n        let className = 'copy-button';\n        if (this.state.hasFeedback)\n            className += ' success';\n\n        return (\n            <>\n            <button \n                type=\"button\" \n                className={className} \n                title=\"Copy\" \n                onClick={this.handleClick}\n            >\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-clipboard\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path fill-rule=\"evenodd\" d=\"M4 1.5H3a2 2 0 0 0-2 2V14a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V3.5a2 2 0 0 0-2-2h-1v1h1a1 1 0 0 1 1 1V14a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3.5a1 1 0 0 1 1-1h1v-1z\"/>\n                  <path fill-rule=\"evenodd\" d=\"M9.5 1h-3a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h3a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5zm-3-1A1.5 1.5 0 0 0 5 1.5v1A1.5 1.5 0 0 0 6.5 4h3A1.5 1.5 0 0 0 11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3z\"/>\n                </svg>\n            </button>\n            {this.state.hasFeedback && <span className=\"copy-feedback\"></span>}\n            </>\n        );\n    }\n}\n\n\nfunction getInputLangTermCol(term, termData) {\n    /* returns term column for input lang */\n\n    return (\n        <td>\n            <div className=\"term\">\n                <span>{term} <CopyButton text={term} /></span>\n                {termData.variants \n                    ? Object.keys(termData.variants).map((variant) => {\n                        if (!termData.variants[variant])\n                            return <span>{variant} <CopyButton text={variant} /></span>;\n\n                        return (\n                            <span>{variant} <span className=\"bracket\">({termData.variants[variant]})</span></span>\n                        );\n                    }) \n                    : null\n                }\n            </div>\n            <div className=\"description\">\n                {termData.description}\n            </div>\n        </td>\n    );\n}\n\n\nfunction getOutputLangTermCol(value) {\n    /* returns the term column for output lang */\n\n    return (\n        <td>\n            {typeof value === 'object' && value !== null ?\n                Object.keys(value).map((key) => {\n                    return (\n                        <div className=\"term\">\n                            <span>{key} <CopyButton text={key} /></span>\n                            <div className=\"comments\">{value[key]}</div>\n                        </div>\n                    );\n                })\n                :\n                <div className=\"term\">\n                    <span>{value || '-'} <CopyButton text={value || '-'} /></span>\n                </div>\n            }\n        </td>\n    );\n\n}\n\n\nfunction toTitleCase(str) {\n  return str.replace(\n    /\\w\\S*/g,\n    function(txt) {\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    }\n  );\n}","import React from 'react';\n\nimport {TopNav} from './components/navs.js';\nimport SearchBox from './components/search.js';\nimport TableBox from './components/table.js';\n\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchVal: ''\n        };\n    }\n\n    handleSearchChange = (e) => {\n        this.setState({searchVal: e.target.value});\n    }\n\n    render() {\n        return (\n            <>\n            <TopNav />\n\n            <div className=\"container\">\n                <SearchBox value={this.state.searchVal} onChange={this.handleSearchChange} />\n\n                <TableBox searchVal={this.state.searchVal} />\n            </div>\n            \n            <AboutSection />\n            </>\n        );\n    }\n}\n\n\nfunction AboutSection() {\n    return (\n        <div className=\"section\">\n            <div className=\"container\">\n                <div className=\"col\">\n                    <h3 id=\"about\">About</h3>\n                    <p>\n                        Translating (or internationalising) a piece of software is not \n                        an easy task. Using translation tools, such as Google Translate, \n                        is neither productive nor very accurate. \n                    </p>\n                    <p>\n                        Open Translations project aims to provide accurate and verified translations \n                        for commonly used terms in software.\n                    </p>\n                </div>\n                <div className=\"col\">\n                    <h3>Contribute</h3>\n                    <p>\n                        Contribute more translations or fix mistakes on <a href=\"https://github.com/bhch/open-translations\">GitHub</a>.\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n}","import './App.scss';\nimport Home from './home.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}